# =================================================================
# Configuration Spring Boot - application.yml
# =================================================================

spring:
  application:
    name: vitrine-backend

  # Configuration de la base de donn√©es
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:vitrine_db}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  # Configuration JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: update  # create-drop pour dev, validate pour prod
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Profil actif (dev, prod)
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

# Configuration du serveur
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  error:
    include-message: always
    include-stacktrace: on_param

# Configuration Actuator (health checks, metrics)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true  # Active les probes liveness/readiness
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    root: ${LOG_LEVEL:INFO}
    com.devops.vitrine: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Configuration OpenTelemetry
otel:
  sdk:
    disabled: false
  resource:
    attributes:
      service.name: vitrine-backend
      service.version: 1.0.0
      deployment.environment: ${ENVIRONMENT:dev}
  exporter:
    otlp:
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://otel-collector:4318}
      protocol: http/protobuf
  traces:
    exporter: otlp
  metrics:
    exporter: otlp
  logs:
    exporter: otlp

---
# Profil DEVELOPMENT
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop

---
# Profil PRODUCTION
spring:
  config:
    activate:
      on-profile: production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    root: WARN
    com.devops.vitrine: INFO
